{"version":3,"sources":["../../controllers/admin.js"],"names":["Admin","require","mongoose","bcrypt","jwt","exports","create","req","res","findOne","email","body","exec","then","admin","hash","password","err","console","log","status","json","code","error","_id","Types","ObjectId","name","save","message","data","catch","login","length","compare","result","token","sign","adminId","type","process","env","JWT","expiresIn","admins","find","seed","next","adm","ADMIN_PASS","ADMIN_NAME","ADMIN_EMAIL"],"mappings":";;AAAA,IAAMA,QAAMC,QAAQ,iBAAR,CAAZ;AACA,IAAMC,WAASD,QAAQ,UAAR,CAAf;AACA,IAAME,SAAOF,QAAQ,QAAR,CAAb;AACA,IAAMG,MAAIH,QAAQ,cAAR,CAAV;;AAEAI,QAAQC,MAAR,GAAe,UAACC,GAAD,EAAKC,GAAL,EAAW;AACtBR,UAAMS,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAsCE,IAAtC,GAA6CC,IAA7C,CAAkD,iBAAO;AACrD,YAAGC,SAAO,IAAV,EAAe;AACXX,mBAAOY,IAAP,CAAYR,IAAII,IAAJ,CAASK,QAArB,EAA8B,EAA9B,EAAiC,UAACC,GAAD,EAAKF,IAAL,EAAY;AACzC,oBAAGE,GAAH,EAAO;AACHC,4BAAQC,GAAR,CAAYF,GAAZ;AACA,2BAAOT,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQC,OAAMN,GAAd,EAArB,CAAP;AACH;AACD,oBAAIH,QAAMd,MAAM;AACZwB,yBAAI,IAAItB,SAASuB,KAAT,CAAeC,QAAnB,EADQ;AAEZC,0BAAKpB,IAAII,IAAJ,CAASgB,IAFF;AAGZjB,2BAAMH,IAAII,IAAJ,CAASD,KAHH;AAIZM,8BAASD;AAJG,iBAAN,CAAV;AAMAD,sBAAMc,IAAN,GAAaf,IAAb,CAAkB,iBAAO;AACrB,2BAAOL,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,eAAhB,EAAgCC,MAAKhB,KAArC,EAArB,CAAP;AACH,iBAFD,EAGCiB,KAHD,CAGO,iBAAO;AACVb,4BAAQC,GAAR,CAAYI,KAAZ;AACA,2BAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,kBAAhB,EAAmCN,OAAMA,KAAzC,EAArB,CAAP;AACH,iBAND;AAOH,aAlBD;AAmBH,SApBD,MAqBI;AACA,mBAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,2BAAhB,EAArB,CAAP;AACH;AACJ,KAzBD,EA0BCE,KA1BD,CA0BO,iBAAO;AACVb,gBAAQC,GAAR,CAAYI,KAAZ;AACA,eAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,kBAAhB,EAAmCN,OAAMA,KAAzC,EAArB,CAAP;AACH,KA7BD;AA+BH,CAhCD;;AAkCAlB,QAAQ2B,KAAR,GAAc,UAACzB,GAAD,EAAKC,GAAL,EAAW;AACrBR,UAAMS,OAAN,CAAc,EAACC,OAAMH,IAAII,IAAJ,CAASD,KAAhB,EAAd,EAAsCE,IAAtC,GAA6CC,IAA7C,CAAkD,iBAAO;AACrD,YAAGC,MAAMmB,MAAN,GAAa,CAAhB,EAAkB;AACd,mBAAOzB,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,2BAAhB,EAArB,CAAP;AACH,SAFD,MAGI;AACA1B,mBAAO+B,OAAP,CAAe3B,IAAII,IAAJ,CAASK,QAAxB,EAAiCF,MAAME,QAAvC,EAAgD,UAACC,GAAD,EAAKkB,MAAL,EAAc;AAC1D,oBAAGlB,GAAH,EAAO;AACH,2BAAOT,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,mBAAhB,EAArB,CAAP;AACH;AACD,oBAAGM,MAAH,EAAU;AACN,wBAAMC,QAAMhC,IAAIiC,IAAJ,CAAS,EAAC3B,OAAMI,MAAMJ,KAAb,EAAmB4B,SAAQxB,MAAMU,GAAjC,EAAqCe,MAAK,OAA1C,EAAT,EAA4DC,QAAQC,GAAR,CAAYC,GAAxE,EAA4E;AACpFC,mCAAU;AAD0E,qBAA5E,CAAZ;AAGA,2BAAOnC,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,oBAAhB,EAAqCO,OAAMA,KAA3C,EAArB,CAAP;AACH,iBALD,MAMI;AACA,2BAAO5B,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,uBAAhB,EAArB,CAAP;AACH;AACJ,aAbD;AAcH;AACJ,KApBD;AAsBH,CAvBD;;AAyBAxB,QAAQuC,MAAR,GAAe,UAACrC,GAAD,EAAKC,GAAL,EAAW;AACtBR,UAAM6C,IAAN,GAAajC,IAAb,GAAoBC,IAApB,CAAyB,kBAAQ;AAC7B,eAAOL,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQQ,MAAKc,MAAb,EAArB,CAAP;AACH,KAFD,EAGCb,KAHD,CAGO,iBAAO;AACVb,gBAAQC,GAAR,CAAYI,KAAZ;AACA,eAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,kBAAhB,EAAmCN,OAAMA,KAAzC,EAArB,CAAP;AACH,KAND;AAOH,CARD;;AAWAlB,QAAQyC,IAAR,GAAa,UAACvC,GAAD,EAAKC,GAAL,EAASuC,IAAT,EAAgB;AACzB/C,UAAM6C,IAAN,GAAajC,IAAb,GAAoBC,IAApB,CAAyB,kBAAQ;AAC7B,YAAG+B,OAAOX,MAAP,IAAe,CAAlB,EAAoB;AAChB,gBAAIe,MAAIR,QAAQC,GAAR,CAAY3B,KAApB;AACAX,mBAAOY,IAAP,CAAYyB,QAAQC,GAAR,CAAYQ,UAAxB,EAAmC,EAAnC,EAAsC,UAAChC,GAAD,EAAKF,IAAL,EAAY;AAC9C,oBAAGE,GAAH,EAAO;AACHC,4BAAQC,GAAR,CAAYF,GAAZ;AACA,2BAAOT,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQC,OAAMN,GAAd,EAArB,CAAP;AACH;AACD,oBAAIH,QAAMd,MAAM;AACZwB,yBAAI,IAAItB,SAASuB,KAAT,CAAeC,QAAnB,EADQ;AAEZC,0BAAKa,QAAQC,GAAR,CAAYS,UAFL;AAGZxC,2BAAM8B,QAAQC,GAAR,CAAYU,WAHN;AAIZnC,8BAASD;AAJG,iBAAN,CAAV;AAMAD,sBAAMc,IAAN,GAAaf,IAAb,CAAkB,iBAAO;AACrB,2BAAOL,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,eAAhB,EAAgCC,MAAKhB,KAArC,EAArB,CAAP;AACH,iBAFD,EAGCiB,KAHD,CAGO,iBAAO;AACVb,4BAAQC,GAAR,CAAYI,KAAZ;AACA,2BAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,kBAAhB,EAAmCN,OAAMA,KAAzC,EAArB,CAAP;AACH,iBAND;AAOH,aAlBD;AAmBH,SArBD,MAsBI;AACA,mBAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,sBAAhB,EAArB,CAAP;AACH;AACJ,KA1BD,EA2BCE,KA3BD,CA2BO,iBAAO;AACVb,gBAAQC,GAAR,CAAYI,KAAZ;AACA,eAAOf,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAK,CAAN,EAAQO,SAAQ,kBAAhB,EAAmCN,OAAMA,KAAzC,EAArB,CAAP;AACH,KA9BD;AA+BH,CAhCD","file":"admin.js","sourcesContent":["const Admin=require('../models/Admin')\r\nconst mongoose=require('mongoose')\r\nconst bcrypt=require('bcrypt')\r\nconst jwt=require('jsonwebtoken')\r\n\r\nexports.create=(req,res)=>{\r\n    Admin.findOne({email:req.body.email}).exec().then(admin=>{\r\n        if(admin==null){\r\n            bcrypt.hash(req.body.password,10,(err,hash)=>{\r\n                if(err){\r\n                    console.log(err)\r\n                    return res.status(500).json({code:0,error:err})\r\n                }\r\n                var admin=Admin({\r\n                    _id:new mongoose.Types.ObjectId(),\r\n                    name:req.body.name,\r\n                    email:req.body.email,\r\n                    password:hash\r\n                })\r\n                admin.save().then(admin=>{\r\n                    return res.status(200).json({code:1,message:\"Admin created\",data:admin})\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error)\r\n                    return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"This admin already exists\"}) \r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n    })\r\n    \r\n}\r\n\r\nexports.login=(req,res)=>{\r\n    Admin.findOne({email:req.body.email}).exec().then(admin=>{\r\n        if(admin.length<1){\r\n            return res.status(200).json({code:0,message:\"This admin does not exist\"})\r\n        }\r\n        else{\r\n            bcrypt.compare(req.body.password,admin.password,(err,result)=>{\r\n                if(err){\r\n                    return res.status(500).json({code:0,message:\"An error occurred\"})\r\n                }\r\n                if(result){\r\n                    const token=jwt.sign({email:admin.email,adminId:admin._id,type:\"admin\"},process.env.JWT,{\r\n                        expiresIn:\"24h\"\r\n                    })\r\n                    return res.status(200).json({code:1,message:\"Signin successfull\",token:token}) \r\n                }\r\n                else{\r\n                    return res.status(200).json({code:0,message:\"Authentication failed\"})\r\n                }\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexports.admins=(req,res)=>{\r\n    Admin.find().exec().then(admins=>{\r\n        return res.status(200).json({code:1,data:admins})\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n    })\r\n}\r\n\r\n\r\nexports.seed=(req,res,next)=>{\r\n    Admin.find().exec().then(admins=>{\r\n        if(admins.length==0){\r\n            var adm=process.env.admin\r\n            bcrypt.hash(process.env.ADMIN_PASS,10,(err,hash)=>{\r\n                if(err){\r\n                    console.log(err)\r\n                    return res.status(500).json({code:0,error:err})\r\n                }\r\n                var admin=Admin({\r\n                    _id:new mongoose.Types.ObjectId(),\r\n                    name:process.env.ADMIN_NAME,\r\n                    email:process.env.ADMIN_EMAIL,\r\n                    password:hash\r\n                })\r\n                admin.save().then(admin=>{\r\n                    return res.status(200).json({code:1,message:\"Admin created\",data:admin})\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error)\r\n                    return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n                })\r\n            })  \r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"Admin already exists\"}) \r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n    })\r\n}\r\n"]}