{"version":3,"sources":["../../controllers/menu.js"],"names":["Menu","require","base64Img","mongoose","exports","add","req","res","fname","randName","img","body","_image","err","filepath","status","json","code","message","erro","fn","split","pop","console","log","menu","_id","Types","ObjectId","name","price","image","qty","created_at","Date","save","then","result","data","catch","error","Math","floor","random","b64toImage","find","exec","update","id","params","$set","take","findOne","current_qty","new_qty","delete","remove","fs","readFileSync","writeHead","end"],"mappings":"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","file":"menu.js","sourcesContent":["const Menu=require('../models/Menu')\r\nconst base64Img=require('base64-img')\r\nconst mongoose=require('mongoose')\r\n\r\n\r\nexports.add=(req,res)=>{\r\n    var fname=randName()\r\n    base64Img.img(req.body._image, 'img/menu', fname, function(err, filepath) {\r\n        \r\n        if(err){\r\n            return res.status(500).json({code:0,message:\"An upload error occured\",erro:err})\r\n        }\r\n        if(filepath){\r\n            var fn=filepath.split('\\\\').pop().split('/').pop()\r\n            console.log(fn)\r\n            var menu=Menu({\r\n                _id: new mongoose.Types.ObjectId(),\r\n                name:req.body.name,\r\n                price:req.body.price,\r\n                image:fn,\r\n                qty:req.body.qty,\r\n                created_at:Date()\r\n            })\r\n            menu.save().then(result=>{\r\n                console.log(result)\r\n                res.status(200).json({code:1,message:\"Menu item created\",data:result})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n                res.status(500).json({code:0,error:error})\r\n            }) \r\n        }\r\n        \r\n    })\r\n}\r\n\r\nfunction randName(){\r\n    var name=Math.floor((Math.random() * 10000000) + 99000000000)\r\n    return name\r\n}\r\nfunction b64toImage(data,fname){\r\n    base64Img.img(data, 'menu', fname, function(err, filepath) {\r\n\r\n    })\r\n}\r\n\r\n//this gets all the menu items\r\nexports.menu=(req,res)=>{\r\n    Menu.find()\r\n    .exec()\r\n    .then(result=>{\r\n        res.status(200).json({code:1,data:result})\r\n    })\r\n    .catch(error=>{\r\n        res.status(500).json({error:error})\r\n    })\r\n}\r\n\r\nexports.update=(req,res)=>{\r\n    const id=req.params.id\r\n    Menu.update({_id:id},{$set:{name:req.body.name,price:req.body.price,qty:req.body.qty}})\r\n    .then(result=>{\r\n        res.status(200).json({code:1,message:\"Menu updated\",data:result})\r\n    })\r\n    .catch(error=>{\r\n        res.status(500).json({code:0,error:error})\r\n    })\r\n}\r\n\r\nexports.take=(req,res)=>{\r\n    const id=req.params.id\r\n    Menu.findOne({_id:id}).exec()\r\n    .then(menu=>{\r\n        if(menu){\r\n            if(menu.qty<1){\r\n                return res.status(200).json({code:0,message:\"Sorry no more, its finished\"}) \r\n            }\r\n            let current_qty=menu.qty\r\n            let new_qty=current_qty-req.params.take\r\n            menu.qty=new_qty\r\n            menu.save().then(result=>{\r\n                if(result){\r\n                    return res.status(200).json({code:1})\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                return res.status(500).json({code:0,message:\"An error occured\",error:err})\r\n            })\r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"There is no menu item like that\"}) \r\n        }\r\n    })\r\n    .catch(err=>{\r\n        return res.status(500).json({code:0,message:\"An error occured\",error:err})\r\n    })\r\n}\r\n\r\nexports.delete=(req,res)=>{\r\n    const id=req.params.id\r\n    Menu.remove({_id:id}).then(result=>{\r\n        res.status(200).json({code:1,message:\"Menu deleted\"})\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        res.status(200).json({code:0,message:\"An error occured\"})  \r\n    })\r\n}\r\n\r\nexports.image=(req,res)=>{\r\n    var fs=require('fs')\r\n    let name=req.params.name\r\n    var img = fs.readFileSync('./img/menu/'+name);\r\n    res.writeHead(200, {'Content-Type': 'image/gif' })\r\n    res.end(img, 'binary')\r\n}"]}