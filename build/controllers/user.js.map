{"version":3,"sources":["../../controllers/user.js"],"names":["User","require","bcrypt","mongoose","jwt","exports","sayhi","req","res","status","json","message","signup","check","isString","exists","isLength","min","errors","validationErrors","code","find","email","body","exec","then","user","length","hash","password","err","error","_id","Types","ObjectId","name","Math","floor","random","save","sgMail","setApiKey","process","env","SMS_KEY","msg","to","from","subject","html","send","console","log","result","data","catch","signin","findOne","compare","token","sign","userId","type","JWT","expiresIn","confirm","confirmed","forgot_pass","fchange_pass","new_password","user_id","userData","select"],"mappings":";;AAAA,IAAMA,OAAKC,QAAQ,gBAAR,CAAX;AACA,IAAMC,SAAOD,QAAQ,QAAR,CAAb;AACA,IAAME,WAASF,QAAQ,UAAR,CAAf;AACA,IAAMG,MAAIH,QAAQ,cAAR,CAAV;;AAGA;AACAI,QAAQC,KAAR,GAAc,UAACC,GAAD,EAAKC,GAAL,EAAW;AACrBA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,SAAT,EAArB;AACH,CAFD;;AAKA;AACAN,QAAQO,MAAR,GAAe,UAACL,GAAD,EAAKC,GAAL,EAAW;AACtBD,QAAIM,KAAJ,CAAU,MAAV,EAAiB,kBAAjB,EAAqCC,QAArC,GAAgDC,MAAhD;AACAR,QAAIM,KAAJ,CAAU,OAAV,EAAkB,wBAAlB,EAA4CG,QAA5C,CAAqD,EAACC,KAAI,CAAL,EAArD,EAA8DF,MAA9D;AACA,QAAIG,SAAOX,IAAIY,gBAAJ,EAAX;AACA,QAAGD,MAAH,EAAU;AACN,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAAmCO,QAAOA,MAA1C,EAArB,CAAP;AACH;AACD;AACAlB,SAAKqB,IAAL,CAAU,EAACC,OAAMf,IAAIgB,IAAJ,CAASD,KAAhB,EAAV,EAAkCE,IAAlC,GAAyCC,IAAzC,CAA8C,gBAAM;AAChD,YAAGC,KAAKC,MAAL,GAAY,CAAf,EAAiB;AACb,mBAAOnB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,2BAAhB,EAArB,CAAP;AACH,SAFD,MAEK;AACDT,mBAAO0B,IAAP,CAAYrB,IAAIgB,IAAJ,CAASM,QAArB,EAA8B,EAA9B,EAAiC,UAACC,GAAD,EAAKF,IAAL,EAAY;AACzC,oBAAGE,GAAH,EAAO;AACH,2BAAOtB,IAAIC,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,EAACU,MAAK,CAAN,EAAQW,OAAMD,GAAd,EAAkBnB,SAAQ,mBAA1B,EADC,CAAP;AAEH,iBAHD,MAII;AACA,wBAAIe,OAAK,IAAI1B,IAAJ,CAAS;AACdgC,6BAAI,IAAI7B,SAAS8B,KAAT,CAAeC,QAAnB,EADU;AAEdC,8BAAK5B,IAAIgB,IAAJ,CAASY,IAFA;AAGdb,+BAAMf,IAAIgB,IAAJ,CAASD,KAHD;AAIdO,kCAASD,IAJK;AAKdR,8BAAKgB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,KAAzB,IAAkC;AALzB,qBAAT,CAAT;AAOAZ,yBAAKa,IAAL,GAAYd,IAAZ,CAAiB,kBAAQ;AACrB;AACA,4BAAMe,SAASvC,QAAQ,gBAAR,CAAf;AACAuC,+BAAOC,SAAP,CAAiBC,QAAQC,GAAR,CAAYC,OAA7B;AACA,4BAAMC,MAAM;AACZC,gCAAIpB,KAAKJ,KADG;AAEZyB,kCAAM,oBAFM;AAGZC,qCAAS,yBAHG;AAIZC,kCAAM,qDAAmDvB,KAAKN,IAAxD,GAA6D;AAJvD,yBAAZ;AAMAoB,+BAAOU,IAAP,CAAYL,GAAZ;AACAM,gCAAQC,GAAR,CAAYC,MAAZ;AACA7C,4BAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,2BAAhB,EAA4C2C,MAAK5B,IAAjD,EAArB;AACH,qBAbD,EAcC6B,KAdD,CAcO,iBAAO;AACVJ,gCAAQC,GAAR,CAAYrB,KAAZ;AACA,+BAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACqB,OAAMA,KAAP,EAArB,CAAP;AACH,qBAjBD;AAkBH;AACJ,aAhCD;AAiCH;AACJ,KAtCD;AAuCH,CA/CD;;AAiDA;AACA1B,QAAQmD,MAAR,GAAe,UAACjD,GAAD,EAAKC,GAAL,EAAW;AACtB;AACAD,QAAIM,KAAJ,CAAU,OAAV,EAAkB,wBAAlB,EAA4CG,QAA5C,CAAqD,EAACC,KAAI,CAAL,EAArD,EAA8DF,MAA9D;AACA,QAAIG,SAAOX,IAAIY,gBAAJ,EAAX;AACA,QAAGD,MAAH,EAAU;AACN,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAAmCO,QAAOA,MAA1C,EAArB,CAAP;AACH;AACD;AACAlB,SAAKyD,OAAL,CAAa,EAACnC,OAAMf,IAAIgB,IAAJ,CAASD,KAAhB,EAAb,EACCE,IADD,GACQC,IADR,CACa,gBAAM;AACf,YAAG,CAACC,IAAJ,EAAS;AACL,mBAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,6BAAhB,EAArB,CAAP;AACH,SAFD,MAEK;AACD;AACAT,mBAAOwD,OAAP,CAAenD,IAAIgB,IAAJ,CAASM,QAAxB,EAAiCH,KAAKG,QAAtC,EAA+C,UAACC,GAAD,EAAKuB,MAAL,EAAc;AACzD,oBAAGvB,GAAH,EAAO;AACH,2BAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,mBAAhB,EAArB,CAAP;AACH;AACD,oBAAG0C,MAAH,EAAU;AACN;AACA,wBAAMM,QAAMvD,IAAIwD,IAAJ,CAAS,EAACtC,OAAMI,KAAKJ,KAAZ,EAAkBuC,QAAOnC,KAAKM,GAA9B,EAAkC8B,MAAK,MAAvC,EAAT,EAAwDpB,QAAQC,GAAR,CAAYoB,GAApE,EAAwE;AAChFC,mCAAU;AADsE,qBAAxE,CAAZ;AAGA,2BAAOxD,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,oBAAhB,EAAqCgD,OAAMA,KAA3C,EAAiDL,MAAK5B,IAAtD,EAArB,CAAP;AACH,iBAND,MAOI;AACA,2BAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,uBAAhB,EAArB,CAAP;AACH;AACJ,aAdD;AAeH;AACJ,KAtBD,EAuBC4C,KAvBD,CAuBO,iBAAO;AACVJ,gBAAQC,GAAR,CAAYrB,KAAZ;AACA,eAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,mBAAhB,EAArB,CAAP;AACH,KA1BD;AA2BH,CAnCD;;AAsCA;AACAN,QAAQ4D,OAAR,GAAgB,UAAC1D,GAAD,EAAKC,GAAL,EAAW;AACvBD,QAAIM,KAAJ,CAAU,MAAV,EAAiB,mBAAjB,EAAsCE,MAAtC;AACA,QAAIG,SAAOX,IAAIY,gBAAJ,EAAX;AACA,QAAGD,MAAH,EAAU;AACN,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAAmCO,QAAOA,MAA1C,EAArB,CAAP;AACH;AACDlB,SAAKyD,OAAL,CAAa,EAACrC,MAAKb,IAAIgB,IAAJ,CAASH,IAAf,EAAb,EAAmCI,IAAnC,GACCC,IADD,CACM,gBAAM;AACR,YAAGC,IAAH,EAAQ;AACJA,iBAAKwC,SAAL,GAAe,IAAf;AACAxC,iBAAKa,IAAL,GAAYd,IAAZ,CAAiB,kBAAQ;AACrB0B,wBAAQC,GAAR,CAAYC,MAAZ;AACA7C,oBAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,iCAAhB,EAArB;AACH,aAHD,EAIC4C,KAJD,CAIO,iBAAO;AACVJ,wBAAQC,GAAR,CAAYrB,KAAZ;AACAvB,oBAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACqB,OAAMA,KAAP,EAAaX,MAAK,CAAlB,EAAoBT,SAAQ,mBAA5B,EAArB;AACH,aAPD;AAQH,SAVD,MAUK;AACDH,gBAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,0BAAhB,EAArB;AACH;AACJ,KAfD,EAgBC4C,KAhBD,CAgBO,iBAAO;AACVJ,gBAAQC,GAAR,CAAYrB,KAAZ;AACA,eAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACqB,OAAMA,KAAP,EAArB,CAAP;AACH,KAnBD;AAoBH,CA1BD;;AA4BA1B,QAAQ8D,WAAR,GAAoB,UAAC5D,GAAD,EAAKC,GAAL,EAAW;AAC3BR,SAAKyD,OAAL,CAAa,EAACnC,OAAMf,IAAIgB,IAAJ,CAASD,KAAhB,EAAb,EAAqCE,IAArC,GACCC,IADD,CACM,gBAAM;AACR,YAAGC,IAAH,EAAQ;AACJA,iBAAKN,IAAL,GAAUgB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,KAAzB,IAAkC,KAA5C;AACAZ,iBAAKa,IAAL,GAAYd,IAAZ,CAAiB,kBAAQ;AACrB,oBAAMe,SAASvC,QAAQ,gBAAR,CAAf;AACAuC,uBAAOC,SAAP,CAAiBC,QAAQC,GAAR,CAAYC,OAA7B;AACA,oBAAMC,MAAM;AACZC,wBAAIpB,KAAKJ,KADG;AAEZyB,0BAAM,oBAFM;AAGZC,6BAAS,yBAHG;AAIZC,0BAAM,qDAAmDvB,KAAKN,IAAxD,GAA6D;AAJvD,iBAAZ;AAMAoB,uBAAOU,IAAP,CAAYL,GAAZ;AACAM,wBAAQC,GAAR,CAAYC,MAAZ;AACA,uBAAO7C,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,sCAAhB,EAAuD2C,MAAKD,MAA5D,EAArB,CAAP;AACH,aAZD,EAaCE,KAbD,CAaO,iBAAO;AACVJ,wBAAQC,GAAR,CAAYrB,KAAZ;AACA,uBAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAArB,CAAP;AACH,aAhBD;AAiBH,SAnBD,MAoBI;AACA,mBAAOH,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,2BAAhB,EAArB,CAAP;AACH;AACJ,KAzBD,EA0BC4C,KA1BD,CA0BO,iBAAO;AACV,eAAO/C,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAAmCoB,OAAMA,KAAzC,EAArB,CAAP;AACH,KA5BD;AA6BH,CA9BD;;AAgCA1B,QAAQ+D,YAAR,GAAqB,UAAC7D,GAAD,EAAKC,GAAL,EAAW;AAC5B;AACAD,QAAIM,KAAJ,CAAU,MAAV,EAAiB,kBAAjB,EAAqCC,QAArC,GAAgDC,MAAhD;AACAR,QAAIM,KAAJ,CAAU,cAAV,EAAyB,wBAAzB,EAAmDE,MAAnD;AACA,QAAIG,SAAOX,IAAIY,gBAAJ,EAAX;AACA,QAAGD,MAAH,EAAU;AACN,eAAOV,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,kBAAhB,EAAmCO,QAAOA,MAA1C,EAArB,CAAP;AACH;AACDlB,SAAKyD,OAAL,CAAa,EAACrC,MAAKb,IAAIgB,IAAJ,CAASH,IAAf,EAAb,EAAmCI,IAAnC,GACCC,IADD,CACM,gBAAM;AACR,YAAGC,IAAH,EAAQ;AACJxB,mBAAO0B,IAAP,CAAYrB,IAAIgB,IAAJ,CAAS8C,YAArB,EAAkC,EAAlC,EAAqC,UAACvC,GAAD,EAAKF,IAAL,EAAY;AAC7C,oBAAGE,GAAH,EAAO;AACH,2BAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACqB,OAAMD,GAAP,EAAWV,MAAK,CAAhB,EAArB,CAAP;AACH;AACDM,qBAAKG,QAAL,GAAcD,IAAd;AACAF,qBAAKa,IAAL,GAAYd,IAAZ,CAAiB,kBAAQ;AACrB0B,4BAAQC,GAAR,CAAYC,MAAZ;AACA,2BAAO7C,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,gCAAhB,EAArB,CAAP;AACH,iBAHD,EAIC4C,KAJD,CAIO,iBAAO;AACVJ,4BAAQC,GAAR,CAAYrB,KAAZ;AACA,2BAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQW,OAAMA,KAAd,EAAoBpB,SAAQ,mBAA5B,EAArB,CAAP;AACH,iBAPD;AAQH,aAbD;AAcH,SAfD,MAgBI;AACA,mBAAOH,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,aAAhB,EAArB,CAAP;AACH;AACJ,KArBD,EAsBC4C,KAtBD,CAsBO,iBAAO;AACVJ,gBAAQC,GAAR,CAAYrB,KAAZ;AACA,eAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQW,OAAMA,KAAd,EAAoBpB,SAAQ,mBAA5B,EAArB,CAAP;AACH,KAzBD;AA0BH,CAlCD;;AAoCA;AACA;AACAN,QAAQqB,IAAR,GAAa,UAACnB,GAAD,EAAKC,GAAL,EAAW;AACpB,QAAI8D,UAAQ/D,IAAIgE,QAAJ,CAAaV,MAAzB;AACA7D,SAAKyD,OAAL,CAAa,EAACzB,KAAIsC,OAAL,EAAb,EACCE,MADD,CACQ,kBADR,EAEChD,IAFD,GAGCC,IAHD,CAGM,gBAAM;AACR,YAAGC,IAAH,EAAQ;AACJ,mBAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQkC,MAAK5B,IAAb,EAArB,CAAP;AACH,SAFD,MAGI;AACA,mBAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQT,SAAQ,6BAAhB,EAArB,CAAP;AACH;AACJ,KAVD,EAWC4C,KAXD,CAWO,iBAAO;AACV,eAAO/C,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,MAAK,CAAN,EAAQW,OAAMA,KAAd,EAArB,CAAP;AACH,KAbD;AAcH,CAhBD","file":"user.js","sourcesContent":["const User=require('../models/User')\r\nconst bcrypt=require('bcrypt')\r\nconst mongoose=require('mongoose')\r\nconst jwt=require('jsonwebtoken')\r\n\r\n\r\n//test\r\nexports.sayhi=(req,res)=>{\r\n    res.status(200).json({message:\"how far\"})\r\n}\r\n\r\n\r\n//sign up function\r\nexports.signup=(req,res)=>{\r\n    req.check(\"name\",\"Name is required\").isString().exists()\r\n    req.check(\"email\",\"You need a valid email\").isLength({min:8}).exists()\r\n    var errors=req.validationErrors()\r\n    if(errors){\r\n        return res.status(200).json({code:0,message:\"An error occured\",errors:errors})\r\n    }    \r\n    //check if a user exists\r\n    User.find({email:req.body.email}).exec().then(user=>{\r\n        if(user.length>0){\r\n            return res.status(200).json({code:0,message:\"This user already exists.\"})\r\n        }else{\r\n            bcrypt.hash(req.body.password,10,(err,hash)=>{\r\n                if(err){\r\n                    return res.status(500)\r\n                    .json({code:0,error:err,message:\"An error occurred\"})\r\n                }\r\n                else{\r\n                    var user=new User({\r\n                        _id:new mongoose.Types.ObjectId(),\r\n                        name:req.body.name,\r\n                        email:req.body.email,\r\n                        password:hash,\r\n                        code:Math.floor(Math.random()*90000) + 10000\r\n                    })\r\n                    user.save().then(result=>{\r\n                        //send user a mail\r\n                        const sgMail = require('@sendgrid/mail')\r\n                        sgMail.setApiKey(process.env.SMS_KEY)\r\n                        const msg = {\r\n                        to: user.email,\r\n                        from: 'swaye407@gmail.com',\r\n                        subject: 'Swaye Confirmation code',\r\n                        html: '<p>Thank you for using swaye, here is your code:'+user.code+'</p>',\r\n                        }\r\n                        sgMail.send(msg)\r\n                        console.log(result)\r\n                        res.status(200).json({code:1,message:\"User created successfully\",data:user})\r\n                    })\r\n                    .catch(error=>{\r\n                        console.log(error)\r\n                        return res.status(500).json({error:error})\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n//sign in a user\r\nexports.signin=(req,res)=>{\r\n    //validate data\r\n    req.check(\"email\",\"You need a valid email\").isLength({min:8}).exists()\r\n    var errors=req.validationErrors()\r\n    if(errors){\r\n        return res.status(200).json({code:0,message:\"An error occured\",errors:errors})\r\n    }  \r\n    //get the user by phone data\r\n    User.findOne({email:req.body.email})\r\n    .exec().then(user=>{\r\n        if(!user){\r\n            return res.status(200).json({code:0,message:\"This account does not exist\"})\r\n        }else{\r\n            //check the password\r\n            bcrypt.compare(req.body.password,user.password,(err,result)=>{\r\n                if(err){\r\n                    return res.status(200).json({code:0,message:\"An error occurred\"})\r\n                }\r\n                if(result){\r\n                    //create token\r\n                    const token=jwt.sign({email:user.email,userId:user._id,type:\"user\"},process.env.JWT,{\r\n                        expiresIn:\"24h\"\r\n                    })\r\n                    return res.status(200).json({code:1,message:\"Signin successfull\",token:token,data:user}) \r\n                }\r\n                else{\r\n                    return res.status(200).json({code:0,message:\"Authentication failed\"})\r\n                }\r\n            })\r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({code:0,message:\"An error occurred\"})\r\n    })\r\n}\r\n\r\n\r\n//confirms a user account with a code\r\nexports.confirm=(req,res)=>{\r\n    req.check(\"code\",\"You need the code\").exists()\r\n    var errors=req.validationErrors()\r\n    if(errors){\r\n        return res.status(200).json({code:0,message:\"An error occured\",errors:errors})\r\n    } \r\n    User.findOne({code:req.body.code}).exec()\r\n    .then(user=>{\r\n        if(user){\r\n            user.confirmed=true\r\n            user.save().then(result=>{\r\n                console.log(result)\r\n                res.status(200).json({code:1,message:\"Your account has been confirmed\"})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n                res.status(500).json({error:error,code:0,message:\"An error occurred\"})\r\n            })\r\n        }else{\r\n            res.status(200).json({code:0,message:\"This code does not exist\"}) \r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({error:error})\r\n    })\r\n}\r\n\r\nexports.forgot_pass=(req,res)=>{\r\n    User.findOne({email:req.body.email}).exec()\r\n    .then(user=>{\r\n        if(user){\r\n            user.code=Math.floor(Math.random()*90000) + 10000\r\n            user.save().then(result=>{\r\n                const sgMail = require('@sendgrid/mail')\r\n                sgMail.setApiKey(process.env.SMS_KEY)\r\n                const msg = {\r\n                to: user.email,\r\n                from: 'swaye407@gmail.com',\r\n                subject: 'Swaye Confirmation code',\r\n                html: '<p>Thank you for using swaye, here is your code:'+user.code+'</p>',\r\n                }\r\n                sgMail.send(msg)\r\n                console.log(result)\r\n                return res.status(200).json({code:1,message:\"A meail has been sent with your code\",data:result})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n                return res.status(500).json({code:0,message:\"An error occured\"})\r\n            })\r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"This email does not exist\"})\r\n        }\r\n    })\r\n    .catch(error=>{\r\n        return res.status(500).json({code:0,message:\"An error occured\",error:error})\r\n    })\r\n}\r\n\r\nexports.fchange_pass=(req,res)=>{\r\n    //validate req data\r\n    req.check(\"code\",\"Name is required\").isString().exists()\r\n    req.check(\"new_password\",\"A password is required\").exists()\r\n    var errors=req.validationErrors()\r\n    if(errors){\r\n        return res.status(200).json({code:0,message:\"An error occured\",errors:errors})\r\n    }  \r\n    User.findOne({code:req.body.code}).exec()\r\n    .then(user=>{\r\n        if(user){\r\n            bcrypt.hash(req.body.new_password,10,(err,hash)=>{\r\n                if(err){\r\n                    return res.status(500).json({error:err,code:0})\r\n                }\r\n                user.password=hash\r\n                user.save().then(result=>{\r\n                    console.log(result)\r\n                    return res.status(200).json({code:1,message:\"Your password has been changed\"})\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error)\r\n                    return res.status(500).json({code:0,error:error,message:\"An error occurred\"})\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"Wrong code!\"}) \r\n        }\r\n    })\r\n    .catch(error=>{\r\n        console.log(error)\r\n        return res.status(500).json({code:0,error:error,message:\"An error occurred\"}) \r\n    })\r\n}\r\n\r\n//get a signed in user\r\n//protected function\r\nexports.user=(req,res)=>{\r\n    var user_id=req.userData.userId\r\n    User.findOne({_id:user_id})\r\n    .select(\"name email phone\")\r\n    .exec()\r\n    .then(user=>{\r\n        if(user){\r\n            return res.status(200).json({code:1,data:user})\r\n        }\r\n        else{\r\n            return res.status(200).json({code:0,message:\"This account does not exist\"})\r\n        }\r\n    })\r\n    .catch(error=>{\r\n        return res.status(500).json({code:0,error:error})\r\n    })\r\n}"]}